import streamlit as st
import json
import requests
import pandas as pd
from streamlit_feedback import streamlit_feedback
from streamlit_option_menu import option_menu
import plotly.graph_objects as go
import os

# –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'http://web:8004/

# –∫–æ–Ω—Ñ–∏–≥ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏
st.set_page_config(
    page_title = "Dashboard",
    layout = 'wide',
    page_icon = "üõ¢Ô∏è", 
    initial_sidebar_state = "auto", 
)



def create_map(map_df: "pd.DataFrame") -> "pd.DataFrame":
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å –Ω–∞–±–æ—Ä–æ–º —Å–∞–π—Ç–æ–≤

    Args:
        map_df (pd.DataFrame): –¥–∞—Ç–∞—Ñ—Ä–µ–π–º –¥–ª—è –ø–æ—Å—Ç–æ—Ä–æ–µ–Ω–∏—è –∫–∞—Ä—Ç—ã 

    Returns:
        _type_: –∫–∞—Ä—Ç–∞ plotly —Å –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏ 
    """
    # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 
    layout = go.Layout(
        autosize=False,
        width=1250,
        height=1000,
        xaxis=go.layout.XAxis(linecolor="black", linewidth=1, mirror=True),
        yaxis=go.layout.YAxis(linecolor="black", linewidth=1, mirror=True),
        margin=go.layout.Margin(l=50, r=50, b=100, t=100, pad=4),
    )

    # —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ä—Ç—ã 
    fig = go.Figure(go.Scattermapbox(lat=map_df["lat"],
                                    lon=map_df["lon"], 
                                    text= map_df["name_map"],
                                    marker=dict(colorbar=dict(title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π"),
                                                color=map_df['value_amount'],
                                                )
                                    ), 
                    layout=layout)
    map_center = go.layout.mapbox.Center(lat=58.38, 
                                        lon=97.45)
    fig.update_layout(mapbox_style="open-street-map",
                    mapbox=dict(center=map_center, zoom=2))
    return fig
    
    
 
def stats_brush(df: "pd.DataFrame") -> "pd.DataFrame":
    """ –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ 
        –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ –¥–∞–±—ã –Ω–µ –∑–∞—Ö–ª–æ–º–ª—è—Ç—å —Å—Ç—Ä–∏–º–ª–∏—Ç –ª–∏—à–Ω–∏–º–∏ —Ä–∞—Å—á–µ—Ç–∞–º–∏

    Args:
        df(pd.DataFrame): –¥–∞—Ç–∞—Ñ—Ä–µ–π–º —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ –ø–µ—Ä–º–µ–Ω–Ω–æ–π —Å –Ω–∞–±–æ—Ä–æ–º –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤
    """
    # –∫—É—Å–æ–∫ –∫–æ–¥–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ 
    # –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ –¥–∞–±—ã –Ω–µ –∑–∞—Ö–ª–æ–º–ª—è—Ç—å —Å—Ç—Ä–∏–º–ª–∏—Ç –ª–∏—à–Ω–∏–º–∏ —Ä–∞—Å—á–µ—Ç–∞–º–∏
    
    # —É–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–π –∫–æ–ª–æ–Ω–∫–∏ –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ª–µ–∑–ª–∞ –∏–∑-–∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ —Å–∫–ª–∏–≤–∞–Ω–∏—é –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–æ–≤
    # (–º–æ–∂–µ—Ç –ø–æ–ø—Ä–∞–≤–∏—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ ) 
    df.drop(df.columns[[0]], axis= 1, inplace= True)
    
    # –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ —Å–º–µ–Ω–µ –¥–∞—Ç—ã –Ω–∞ –±–æ–ª–µ–µ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç 
    df['date_loc_min'] = pd.to_datetime(df['date_loc_min'])
    df['date_loc_min'] = df['date_loc_min'].dt.strftime('%Y-%m-%d')
    
    df['date_loc_max'] = pd.to_datetime(df['date_loc_max'])
    df['date_loc_max'] = df['date_loc_max'].dt.strftime('%Y-%m-%d') 
    
    df.rename(columns={"site_code": "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ—Ä–º–µ—Ä —Å–∞–π—Ç–∞",
                       "site_name": "–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞",
                       "value_mean": "–°—Ä–µ–¥–Ω–µ–µ",
                       "value_min": "–ú–∏–Ω–∏–º–∞–ª–ª—å–Ω–æ–µ",
                       "value_max": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ",
                       "value_amount": "–ö–æ–ª-–≤–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π",
                       "date_loc_min": "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è",
                       "date_loc_max": "–ú–∞–∫—Å–º–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è"},
              inplace=True)
       
# ######################
# # sidebar
# ######################
with st.sidebar:
    choose = option_menu(None, ["–ì–ª–∞–≤–Ω–∞—è", "---", "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–û—Ç–Ω–æ—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å", "–î–µ—Ñ–∏—Ü–∏—Ç —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞", "–û—Å–∞–¥–∫–∏"],
                         default_index=0,
                         styles={
        "container": {"padding": "5!important", "background-color": "#262730", "width":"500px"},
        "menu-title": {"font-size": "18px"},
        "icon": {"color": "#1E90FF", "font-size": "20px"},
        "nav-link": {"font-size": "18px", "text-align": "left", "--hover-color": "black"},
        "nav-link-selected": {"background-color": "#1E90FF", "color": "black", "font-size": "18px"},
    }
    )

# ######################
# # start
# ######################

# page –ì–ª–∞–≤–Ω–∞—è
if choose == "–ì–ª–∞–≤–Ω–∞—è":
    st.title("–Ω–∞ —Ç–∞–±–∞—Ö –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∞–±–ª–∏—Ü—ã amur")
    
if choose == "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞":
   
    st.title("–î–∞–Ω–Ω—ã–µ –ø–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ")
    stats = pd.read_csv(f"{os.getcwd()}/full_stat_–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv", encoding = "windows-1251", sep = ";")
    mapping = pd.read_csv(f"{os.getcwd()}/map_–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv", encoding = "windows-1251", sep = ";")

    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

   # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data = stats, use_container_width = True)
    st.plotly_chart(create_map(mapping), use_container_width=True)


if choose == "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ")
    
    stats = pd.read_csv(f"{os.getcwd()}/full_stat_–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv", encoding = "windows-1251", sep = ";")
    mapping = pd.read_csv(f"{os.getcwd()}/map_–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv", encoding = "windows-1251", sep = ";") 
      
    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data = stats, use_container_width = True)
    st.plotly_chart(create_map(mapping), use_container_width=True)


if choose == "–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ")
    stats = pd.read_csv(f"{os.getcwd()}/full_stat_–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv", encoding = "windows-1251", sep = ";")
    mapping = pd.read_csv(f"{os.getcwd()}/map_—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv", encoding = "windows-1251", sep = ";")  
     
    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data = stats, use_container_width = True)
    st.plotly_chart(create_map(mapping), use_container_width=True)
    
    

if choose == "–û—Ç–Ω–æ—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–π –≤–ª–∞–∂–Ω–æ—Å—Ç–∏")
    stats = pd.read_csv(f"{os.getcwd()}/full_stat_–æ—Ç–Ω_–≤–ª–∞–∂–Ω–æ—Å—Ç—å.csv", encoding = "windows-1251", sep = ";")
    mapping = pd.read_csv(f"{os.getcwd()}/map_–æ—Ç–Ω_–≤–ª–∞–∂–Ω–æ—Å—Ç—å.csv", encoding = "windows-1251", sep = ";")   
    
    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)
    
    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data = stats, use_container_width = True)
    st.plotly_chart(create_map(mapping), use_container_width=True)
    
    

if choose == "–î–µ—Ñ–∏—Ü–∏—Ç —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –¥–µ—Ñ–∏—Ü–∏—Ç—É —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞")
    stats = pd.read_csv(f"{os.getcwd()}/full_stat_–¥–µ—Ñ–∏—Ü–∏—Ç —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞.csv", encoding = "windows-1251", sep = ";")
    mapping = pd.read_csv(f"{os.getcwd()}/map_–¥–µ—Ñ–∏—Ü–∏—Ç —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞.csv", encoding = "windows-1251", sep = ";")   
    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)
    
    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data = stats, use_container_width = True)
    st.plotly_chart(create_map(mapping), use_container_width=True)
    
    

if choose == "–û—Å–∞–¥–∫–∏":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ—Å–∞–¥–∫–∞–º")
    stats = pd.read_csv(f"{os.getcwd()}/full_stat_–æ—Å–∞–¥–∫–∏.csv", encoding = "windows-1251", sep = ";")
    mapping = pd.read_csv(f"{os.getcwd()}/map_–æ—Å–∞–¥–∫–∏.csv", encoding = "windows-1251", sep = ";") 
      
    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data = stats, use_container_width = True)
    st.plotly_chart(create_map(mapping), use_container_width=True)    


    
