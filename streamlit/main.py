import streamlit as st
from sqlalchemy import create_engine
import pandas as pd
from streamlit_option_menu import option_menu  # type: ignore
import os

from functions import (
    create_map,
    stats_brush,
)

from pages_code.import_meteo import import_meteo
from pages_code.import_hydro import import_hydro
from pages_code.export_meteo import export_meteo
from pages_code.export_hydro import export_hydro

engine = create_engine("postgresql+psycopg2://postgres:qq@192.168.5.219/amur22_non_iwp")
conn = engine.connect()

# –∫–æ–Ω—Ñ–∏–≥ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏
st.set_page_config(
    page_title="Dashboard",
    layout="wide",
    page_icon="üõ¢Ô∏è",
    initial_sidebar_state="auto",
)


if "download" not in st.session_state:
    st.session_state.download = "refresh"

styles = {
            "container": {
                "display": "flex",
                "align-items": "center",
                "text-align": "center",
                "background-color": "#262730",
            },
            "icon": {
                "color": "lightblue",
                "text-align": "center",
            },
            "nav-link": {
                "display": "flex",
                "margin": "10px",
                "font-size": "25px",
                "text-align": "center",
                "align-items": "center",
                "--hover-color": "black",
            },
            "nav-link-selected": {
                "background-color": "#1E90FF",
                "color": "black",
                "font-size": "25px",
            },
        }

# ######################
# # sidebar
# ######################
with st.sidebar:
    choose = option_menu(
        "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –ì–∏–¥—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏",
        ["–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", "–°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"],
        icons=["pie-chart-fill", "cloud-upload", "download"],
        menu_icon="cast",
        default_index=0,
        styles={
            "container": {
                "padding": "5!important",
                "background-color": "#262730",
                "width": "500px",
            },
            "menu-title": {"font-size": "18px"},
            "nav-link": {
                "font-size": "18px",
                "text-align": "left",
                "--hover-color": "black",
            },
            "nav-link-selected": {
                "background-color": "#1E90FF",
                "color": "black",
                "font-size": "18px",
            },
        },
    )

# ######################
# # start
# ######################

# page –ì–ª–∞–≤–Ω–∞—è
if choose == "–ì–ª–∞–≤–Ω–∞—è":
    st.title(
        """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ —Å –¥–∞—à–±–æ—Ä–¥–æ–º\
            –ø–æ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –ì–∏–¥—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏. \
            –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ \
            –æ–± –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–∑–º–µ—Ä—è–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏, \
            –∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é, \
            –∞ —Ç–∞–∫ –∂–µ –±–∞–∑–æ–≤—ã–º —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º"""
    )

if choose == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
    styles_stat = styles.copy()
    styles_stat["nav-link"]["font-size"] = "18px"
    styles_stat["nav-link-selected"]["font-size"] = "18px"
    choose = option_menu(
        None,
        [
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",
            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",
            "–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",
            "–û—Ç–Ω–æ—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å",
            "–î–µ—Ñ–∏—Ü–∏—Ç —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞",
            "–û—Å–∞–¥–∫–∏",
            "–£—Ä–æ–≤–µ–Ω—å",
            "–†–∞—Å—Ö–æ–¥",
        ],
        icons=[
            "thermometer-sun",
            "thermometer-snow",
            "thermometer-half",
            "droplet-fill",
            "cloud-fill",
            "cloud-drizzle-fill",
            "moisture",
            "water",
        ],
        menu_icon="cast",
        default_index=0,
        orientation="horizontal",
        styles=styles_stat,
    )


if choose == "–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
    choose = option_menu(
        None,
        ["–ú–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ", "–ì–∏–¥—Ä–æ–¥–∞–Ω–Ω—ã–µ"],
        icons=[
            "wind",
            "water",
        ],
        menu_icon="cast",
        default_index=0,
        orientation="horizontal",
        styles=styles,
    )
if choose == "–°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ":
    choose = option_menu(
        None,
        ["–ú–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ ", "–ì–∏–¥—Ä–æ–¥–∞–Ω–Ω—ã–µ "],
        icons=[
            "wind",
            "water",
        ],
        menu_icon="cast",
        default_index=0,
        orientation="horizontal",
        styles=styles,
    )

#############################
# –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –±–∞–∑—É
#############################
if choose == "–ú–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ ":
    import_meteo()

if choose == "–ì–∏–¥—Ä–æ–¥–∞–Ω–Ω—ã–µ ":
    import_hydro()

if choose == "–ú–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ":
    export_meteo()


if choose == "–ì–∏–¥—Ä–æ–¥–∞–Ω–Ω—ã–µ":
    export_hydro()


#############################
# –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
#############################
if choose == "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞":
    st.title("–î–∞–Ω–Ω—ã–µ –ø–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ")
    stats = pd.read_csv(
        f"{os.getcwd()}/csv_data/full_stat_–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv",
        encoding="windows-1251",
        sep=";",
    )
    mapping = pd.read_csv(
        f"{os.getcwd()}/csv_data/map_–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv",
        encoding="windows-1251",
        sep=";",
    )

    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data=stats, use_container_width=True)
    st.plotly_chart(create_map(mapping), use_container_width=True)


if choose == "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ")

    stats = pd.read_csv(
        f"{os.getcwd()}/csv_data/full_stat_–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv",
        encoding="windows-1251",
        sep=";",
    )
    mapping = pd.read_csv(
        f"{os.getcwd()}/csv_data/map_–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv",
        encoding="windows-1251",
        sep=";",
    )

    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data=stats, use_container_width=True)
    st.plotly_chart(create_map(mapping), use_container_width=True)


if choose == "–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ")
    stats = pd.read_csv(
        f"{os.getcwd()}/csv_data/full_stat_–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv",
        encoding="windows-1251",
        sep=";",
    )
    mapping = pd.read_csv(
        f"{os.getcwd()}/csv_data/map_—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.csv", encoding="windows-1251", sep=";"
    )

    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data=stats, use_container_width=True)
    st.plotly_chart(create_map(mapping), use_container_width=True)


if choose == "–û—Ç–Ω–æ—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–π –≤–ª–∞–∂–Ω–æ—Å—Ç–∏")
    stats = pd.read_csv(
        f"{os.getcwd()}/csv_data/full_stat_–æ—Ç–Ω_–≤–ª–∞–∂–Ω–æ—Å—Ç—å.csv", encoding="windows-1251", sep=";"
    )
    mapping = pd.read_csv(
        f"{os.getcwd()}/csv_data/map_–æ—Ç–Ω_–≤–ª–∞–∂–Ω–æ—Å—Ç—å.csv", encoding="windows-1251", sep=";"
    )

    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data=stats, use_container_width=True)
    st.plotly_chart(create_map(mapping), use_container_width=True)


if choose == "–î–µ—Ñ–∏—Ü–∏—Ç —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –¥–µ—Ñ–∏—Ü–∏—Ç—É —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞")
    stats = pd.read_csv(
        f"{os.getcwd()}/csv_data/full_stat_–¥–µ—Ñ–∏—Ü–∏—Ç —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞.csv",
        encoding="windows-1251",
        sep=";",
    )
    mapping = pd.read_csv(
        f"{os.getcwd()}/csv_data/map_–¥–µ—Ñ–∏—Ü–∏—Ç —É–ø—Ä—É–≥–æ—Å—Ç–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞.csv",
        encoding="windows-1251",
        sep=";",
    )
    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data=stats, use_container_width=True)
    st.plotly_chart(create_map(mapping), use_container_width=True)


if choose == "–û—Å–∞–¥–∫–∏":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ—Å–∞–¥–∫–∞–º")
    stats = pd.read_csv(
        f"{os.getcwd()}/csv_data/full_stat_–æ—Å–∞–¥–∫–∏.csv", encoding="windows-1251", sep=";"
    )
    mapping = pd.read_csv(
        f"{os.getcwd()}/csv_data/map_–æ—Å–∞–¥–∫–∏.csv", encoding="windows-1251", sep=";"
    )

    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data=stats, use_container_width=True)
    st.plotly_chart(create_map(mapping), use_container_width=True)

if choose == "–£—Ä–æ–≤–µ–Ω—å":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —É—Ä–æ–≤–Ω—é")
    stats = pd.read_csv(
        f"{os.getcwd()}/csv_data/full_stat_—É—Ä–æ–≤–µ–Ω—å.csv", encoding="windows-1251", sep=";"
    )
    mapping = pd.read_csv(
        f"{os.getcwd()}/csv_data/map_—É—Ä–æ–≤–µ–Ω—å.csv", encoding="windows-1251", sep=";"
    )

    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data=stats, use_container_width=True)
    st.plotly_chart(create_map(mapping), use_container_width=True)

if choose == "–†–∞—Å—Ö–æ–¥":
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ä–∞—Å—Ö–æ–¥—É")
    stats = pd.read_csv(
        f"{os.getcwd()}/csv_data/full_stat_—Ä–∞—Å—Ö–æ–¥.csv", encoding="windows-1251", sep=";"
    )
    mapping = pd.read_csv(
        f"{os.getcwd()}/csv_data/map_—Ä–∞—Å—Ö–æ–¥.csv", encoding="windows-1251", sep=";"
    )

    # –¥–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    stats_brush(stats)

    # –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    st.dataframe(data=stats, use_container_width=True)
    st.plotly_chart(create_map(mapping), use_container_width=True)
